<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="my_rb1">

    <!--
    'front_laser' link must be located at (0.25, 0.0, 0.075) from the 'base_link'.
    Also the link must be rotated 180ยบ in the `x` axis, this means, the laser is upside-down.
    -->
    <xacro:property name="front_laser_x" value="0.25"/>
    <xacro:property name="front_laser_y" value="0.0"/>
    <xacro:property name="front_laser_z" value="0.075"/>
    <xacro:property name="front_laser_roll" value="3.14"/>
    <xacro:property name="front_laser_pitch" value="0"/>
    <xacro:property name="front_laser_yaw" value="0"/>

    <!-- All 4 wheels have the same mass -->
    <xacro:property name="wheel_mass" value="0.25"/>
    <xacro:property name="caster_mass" value="${wheel_mass}"/>
    <xacro:property name="wheel_count" value="2"/>
    <xacro:property name="wheel_mass_total" value="${wheel_count * wheel_mass}"/>
    <xacro:property name="caster_count" value="2"/>
    <xacro:property name="caster_mass_total" value="${caster_count * caster_mass}"/>
    <xacro:property name="base_cylinder_mass" value="${25 - (wheel_mass_total + caster_mass_total)}"/>

    <!-- Properties -->
	<xacro:property name="caster_mu1" value="0"/>
    <xacro:property name="caster_mu2" value="0"/>

    <xacro:property name="wheel_kp" value="1000000.0"/>
    <xacro:property name="wheel_kd" value="100.0"/>
    <xacro:property name="wheel_mu1" value="1.0"/>
    <xacro:property name="wheel_mu2" value="1.0"/>

    <!-- The robot is a cylinder 50 cm in diameter and 30 cm in height -->
    <xacro:property name="base_cylinder_radius" value="0.25"/>
    <xacro:property name="base_cylinder_height" value="0.3"/>

    <!-- Has 2 wheels of 5 cm diameter on each side of the base. One at (0.1, -0.2, -0.15)
         from the base_link and another at (0.1, 0.2, -0.15). -->
    <xacro:property name="wheel_radius" value="0.025"/>
    <xacro:property name="wheel_height" value="0.025"/>
    <xacro:property name="wheel_x" value="0.1"/>
    <xacro:property name="left_wheel_y" value="-0.2"/>
    <xacro:property name="wheel_z" value="-0.15"/>
    <xacro:property name="wheel_roll" value="1.57"/>
    <xacro:property name="wheel_pitch" value="0"/>
    <xacro:property name="wheel_yaw" value="0"/>

    <!-- Has two caster wheels: one at the front and another at the back of the robot of 2.5 cm radius.
         The friction parameters must be "0". One at (-0.1, 0.0, -0.15) from the base_link and another
         at (0.1, 0.0, -0.15).-->
    <xacro:property name="caster_radius" value="0.025"/>
    <xacro:property name="front_caster_x" value="0.1"/>
    <xacro:property name="caster_y" value="0"/>
    <xacro:property name="caster_z" value="-0.15"/>
    
    <material name="dark_blue">
        <color rgba="0 0 0.55 1"/>
    </material>

    <material name="black">
        <color rgba="0 0 0 1"/>
    </material>

    <material name="white">
        <color rgba="1 1 1 1"/>
    </material>

    <!-- base cylinder XACRO -->
    <xacro:macro name="base_cylinder">

        <link name="base_link">
        </link>

        <link name="base_footprint">
        </link>

        <link name="front_laser">
        </link>

        <link name="base_cylinder_link">
            <inertial>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <mass value="${base_cylinder_mass}" />
                <xacro:cylinder_inertia mass="${base_cylinder_mass}"
                    r="${base_cylinder_radius}"
                    l="${base_cylinder_height}"
                />           
            </inertial>
            <collision>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <geometry>
                    <cylinder radius="${base_cylinder_radius}" length="${base_cylinder_height}"/>
                </geometry>
            </collision>
            <visual>
                <origin rpy="0.0 0 0" xyz="0 0 0"/>
                <geometry>
                    <cylinder radius="${base_cylinder_radius}" length="${base_cylinder_height}"/>
                </geometry>
                <material name="dark_blue"/>
            </visual>
        </link>

        <gazebo reference="base_cylinder_link">
            <material>Gazebo/Blue</material>
        </gazebo>

        <joint name="base_cylinder_base_link_joint" type="fixed">
            <parent link="base_link"/>
            <child link="base_cylinder_link"/>
            <origin rpy="0.0 0 0" xyz="0 0 0"/>
        </joint>

        <joint name="base_footprint_base_link_joint" type="fixed">
            <parent link="base_link"/>
            <child link="base_footprint"/>
            <origin rpy="0.0 0 0" xyz="0 0 ${base_cylinder_height * -0.5}"/>
        </joint>

        <joint name="front_laser_base_link_joint" type="fixed">
            <parent link="base_link"/>
            <child link="front_laser"/>
            <origin
                xyz="${front_laser_x} ${front_laser_y} ${front_laser_z}"
                rpy="${front_laser_roll} ${front_laser_pitch} ${front_laser_yaw}"/>
        </joint>

    </xacro:macro>

    <xacro:macro name="wheel" params="side">
        <xacro:property name="multiplier" value="${-1 if side == 'right' else 1}"/>
        <xacro:property name="current_wheel_name" value="${side}_wheel_link"/>
        <link name="${current_wheel_name}">
            <inertial>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <mass value="${wheel_mass}" />
                <xacro:cylinder_inertia mass="${wheel_mass}"
                    r="${wheel_radius}"
                    l="${wheel_height}"
                />           
            </inertial>
            <collision>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_height}"/>
                </geometry>
            </collision>
            <visual>
                <origin rpy="0 0 0" xyz="0 0 0"/>
                <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_height}"/>
                </geometry>
                <material name="black"/>
            </visual>
        </link>

        <gazebo reference="${current_wheel_name}">
            <material>Gazebo/Black</material>
            <kp>${wheel_kp}</kp>
            <kd>${wheel_kd}</kd>
            <mu1>${wheel_mu1}</mu1>
            <mu2>${wheel_mu2}</mu2>
        </gazebo>

        <joint name="${current_wheel_name}_base_link_joint" type="continuous">
            <parent link="base_link"/>
            <child link="${current_wheel_name}"/>
            <origin xyz="${wheel_x} ${multiplier * left_wheel_y} ${wheel_z}" rpy="${wheel_roll} ${wheel_pitch} ${wheel_yaw}" />
             <axis xyz="0 0 1"/>
        </joint>
    </xacro:macro>

    <xacro:macro name="caster" params="side">
        <xacro:property name="multiplier" value="${-1 if side == 'front' else 1}"/>
        <xacro:property name="current_caster_name" value="${side}_caster_link"/>
        <link name="${current_caster_name}">
            <inertial>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <mass value="${caster_mass}" />
                <xacro:sphere_inertia mass="${caster_mass}"
                    r="${caster_radius}"
                />           
            </inertial>
            <collision>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <geometry>
                    <sphere radius="${caster_radius}"/>
                </geometry>
            </collision>
            <visual>
                <origin rpy="0 0 0" xyz="0 0 0"/>
                <geometry>
                    <sphere radius="${caster_radius}"/>
                </geometry>
                <material name="white"/>
            </visual>
        </link>

        <gazebo reference="${current_caster_name}">
            <mu1>${caster_mu1}</mu1>
            <mu2>${caster_mu2}</mu2>
            <material>Gazebo/White</material>
        </gazebo>

        <joint name="${current_caster_name}_base_link_joint" type="fixed">
            <parent link="base_link"/>
            <child link="${current_caster_name}"/>
            <origin
                xyz="${multiplier * front_caster_x} ${caster_y}  ${caster_z}"
                rpy="0 0 0" />
        </joint>

        <gazebo reference="${current_caster_name}">
            <preserveFixedJoint>true</preserveFixedJoint>
        </gazebo>
    </xacro:macro>

    
    <!-- Math Usefull MACROS-->
    <xacro:macro  name="cylinder_inertia" params="mass r l">
      <inertia  ixx="${mass*(3*r*r+l*l)/12}" ixy = "0" ixz = "0"
                iyy="${mass*(3*r*r+l*l)/12}" iyz = "0"
                izz="${mass*(r*r)/2}" />
    </xacro:macro >

    <xacro:macro name="box_inertia" params="mass x y z">
      <inertia  ixx="${mass*(y*y+z*z)/12}" ixy = "0" ixz = "0"
                iyy="${mass*(x*x+z*z)/12}" iyz = "0"
                izz="${mass*(x*x+z*z)/12}"
      />
    </xacro:macro>

    <xacro:macro name="sphere_inertia" params="mass r">
        <inertia  
            ixx="${2*mass*r*r/5}" ixy = "0" ixz = "0"
            iyy="${2*mass*r*r/5}" iyz = "0"
            izz="${2*mass*r*r/5}"
        />
    </xacro:macro>

    <gazebo>
        <plugin filename="libgazebo_ros_diff_drive.so" name="differential_drive_controller">
            <alwaysOn>true</alwaysOn>
            <updateRate>20</updateRate>
            <leftJoint>left_wheel_link_base_link_joint</leftJoint>
            <rightJoint>right_wheel_link_base_link_joint</rightJoint>
            <wheelSeparation>${left_wheel_y * 2.0}</wheelSeparation>
            <wheelDiameter>${wheel_radius * 2.0}</wheelDiameter>
            <torque>10</torque>
            <commandTopic>cmd_vel</commandTopic>
            <odometryTopic>odom</odometryTopic>
            <odometryFrame>odom</odometryFrame>
            <robotBaseFrame>base_link</robotBaseFrame>
        </plugin>
    </gazebo>

    <gazebo reference="front_laser">
        <sensor type="ray" name="head_hokuyo_sensor">
            <pose>0 0 0 0 0 0</pose>
            <visualize>true</visualize>
            <update_rate>20</update_rate>
            <ray>
                <scan>
                    <horizontal>
                        <samples>720</samples>
                        <resolution>1</resolution>
                        <min_angle>-1.570796</min_angle>
                        <max_angle>1.570796</max_angle>
                    </horizontal>
                </scan>
                <range>
                    <min>0.20</min>
                    <max>10.0</max>
                    <resolution>0.01</resolution>
                </range>
                <noise>
                    <type>gaussian</type>
                    <mean>0.0</mean>
                    <stddev>0.01</stddev>
                </noise>
            </ray>
            <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
                <topicName>/scan</topicName>
                <frameName>sensor_laser</frameName>
            </plugin>
        </sensor>
    </gazebo>


    <xacro:base_cylinder />
    
    <xacro:wheel side="left" />
    <xacro:wheel side="right" />
    <xacro:caster side="front" />
    <xacro:caster side="back" />

</robot>